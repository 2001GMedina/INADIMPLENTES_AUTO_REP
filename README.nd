# INADIMPLENTES_AUTO_REP

An automated system for generating and sending overdue payment reports.  
This project retrieves data from SQL queries, formats it into professional HTML tables, and sends it via email — all on a scheduled basis (e.g., through Jenkins or cron jobs).  

## 📌 Features
- Runs SQL queries to fetch overdue payment data.
- Generates **HTML reports** with clean, responsive table formatting.
- Supports multiple tables in the same email.
- Includes a company logo in the email header.
- Automatically calculates summary totals.
- Fully automated email delivery.
- Easily extensible for additional queries and reports.

## 🛠️ Technologies Used
- **Python 3.x**
- **pandas** — for data manipulation and table generation.
- **pyodbc** — for SQL Server/Oracle database connections.
- **jinja2** — for HTML email templating.
- **smtplib** — for sending emails.
- **Jenkins / cron** — for automation scheduling.

## 📂 Project Structure
INADIMPLENTES_AUTO_REP/
│
├── queries/
│ ├── resumo_inadimplentes.sql
│ ├── resumo_total.sql
│
├── utils/
│ ├── email_sender.py
│ ├── html_generator.py
│ ├── logo.png
│
├── main.py
├── requirements.txt
├── README.md
└── .gitignore


## 🚀 How to Run

1. **Clone the repository**
```bash
git clone https://github.com/2001GMedina/INADIMPLENTES_AUTO_REP.git
cd INADIMPLENTES_AUTO_REP

2. **Install dependencies**

pip install -r requirements.txt


3. **Set up environment variables**

Create a .env file or export variables directly in your shell.

Required variables:

DB_CONN_STRING — your database connection string.

SMTP_SERVER, SMTP_PORT, EMAIL_USER, EMAIL_PASSWORD — email settings.

4. **Run the script**

python main.py


📧 Email Example
The email contains:

Company logo.

“Overdue Payments Summary” table from the first SQL query.

“Payment Method Totals” table from the second SQL query.

Overall grand total.